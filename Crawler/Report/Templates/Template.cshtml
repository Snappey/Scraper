@using Crawler.Structures;
@using RazorLight;
@using System.Text.RegularExpressions;
@inherits TemplatePage<Crawler.Report.Models.ReportViewModel>

<html>

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>

    <style>
        .container {
            margin-top: 20px;
        }

        .mb20 {
            margin-bottom: 20px;
        }

        hgroup {
            padding-left: 15px;
            border-bottom: 1px solid #ccc;
        }

            hgroup h1 {
                font: 500 normal 1.625em "Roboto",Arial,Verdana,sans-serif;
                color: #2a3644;
                margin-top: 0;
                line-height: 1.15;
            }

            hgroup h2.lead {
                font: normal normal 1.125em "Roboto",Arial,Verdana,sans-serif;
                color: #2a3644;
                margin: 0;
                padding-bottom: 10px;
            }

        .search-result .thumbnail {
            border-radius: 0 !important;
        }

        .search-result:first-child {
            margin-top: 0 !important;
        }

        .search-result {
            margin-top: 20px;
        }

            .search-result .col-md-2 {
                border-right: 1px dotted #ccc;
                min-height: 140px;
            }

            .search-result ul {
                padding-left: 0 !important;
                list-style: none;
            }

                .search-result ul li {
                    font: 400 normal .85em "Roboto",Arial,Verdana,sans-serif;
                    line-height: 30px;
                }

                    .search-result ul li i {
                        padding-right: 5px;
                    }

            .search-result .col-md-7 {
                position: relative;
            }

            .search-result h3 {
                font: 500 normal 1.375em "Roboto",Arial,Verdana,sans-serif;
                margin-top: 0 !important;
                margin-bottom: 10px !important;
            }

                .search-result h3 > a, .search-result i {
                    color: #248dc1 !important;
                }

            .search-result p {
                font: normal normal 1.125em "Roboto",Arial,Verdana,sans-serif;
            }

            .search-result span.plus {
                position: absolute;
                right: 0;
                top: 126px;
            }

                .search-result span.plus a {
                    background-color: #248dc1;
                    padding: 5px 5px 3px 5px;
                }

                    .search-result span.plus a:hover {
                        background-color: #414141;
                    }

                    .search-result span.plus a i {
                        color: #fff !important;
                    }

            .search-result span.border {
                display: block;
                width: 97%;
                margin: 0 15px;
                border-bottom: 1px dotted #ccc;
            }

            .label-price {
                font-size: 14px;
                float: right;
            }

            .label-url {
                font-size: 16px;
            }
    </style>
</head>

<body>
    <div class="container">
        <hgroup class="mb20">
            <h1>Report Results</h1>
            <h2 class="lead"><strong class="text-danger">@Model.Hotels.Count</strong> results were found for the search for <strong class="text-danger">@Model.SearchLocation</strong> with <strong class="text-danger">@Model.PersonAmount Person(s)</strong> and <strong class="text-danger">@Model.RoomAmount Room(s)</strong> </h2>
            <h5 style="float: right;"> Generated on @Model.Gathered.ToShortDateString()</h5>    
        </hgroup>
        <section class="col-xs-12 col-sm-6 col-md-12">
            
            @foreach (Hotel hotel in @Model.Hotels)
            {
            <article class="search-result row">
                <div class="col-xs-12 col-sm-12 col-md-2">
                    <ul>
                        <li><i class="glyphicon glyphicon-calendar"></i> <span>@Model.CheckIn - @Model.CheckOut</span></li>
                        <li><i class="glyphicon glyphicon-home"></i> <span>@hotel.City</span></li>
                        <li><i class="glyphicon glyphicon-phone"></i> <span>
                            @if(hotel.Phonenumber == String.Empty)
                            {
                                <span> N/A </span>
                            }
                            else
                            {
                                <span>@hotel.Phonenumber</span>
                            }                           
                        </span></li>
                    </ul>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-7">
                    <h3><a href="@hotel.HotelURL" title="">@hotel.Name</a></h3>
                    <p>
                        @if (hotel.Extras != String.Empty)
                        {
                            @hotel.Extras
                        }
                        else
                        {
                            <span> No extra information.. </span>
                        }
                        
                        <br/>
                        <span style="font-size: 10px;float: right;">Gathered on @hotel.DateGathered.ToShortDateString() - @hotel.DateGathered.ToShortTimeString()</span>
                        <ul class="list-group">
                            @{
                                HotelReservation cheapestReservation = hotel.ReservationData.GetAllReservations().First();
                                int cheapestInt = Int32.MaxValue;
                            }
                            @foreach (HotelReservation reservation in hotel.ReservationData.GetAllReservations())
                            {
                                var match = Regex.Match(reservation.Price, @"\d+");
                                if (match.Success)
                                {
                                    int tempInt = Convert.ToInt32(match.Value);

                                    if (tempInt < cheapestInt)
                                    {
                                        cheapestInt = tempInt;
                                        cheapestReservation = reservation;
                                    }
                                }
                            }

                            @foreach (HotelReservation reservation in hotel.ReservationData.GetAllReservations())
                            {
                                if (reservation.Equals(cheapestReservation))
                                {
                                    <li class="list-group-item list-group-item-info">
                                        <a class="label-url" href="https://@reservation.Site">@reservation.Site</a>
                                        <span class="label label-success label-price"> @reservation.Price</span>
                                    </li>
                                }
                                else
                                {
                                    <li class="list-group-item">
                                        <a class ="label-url" href="https://@reservation.Site">@reservation.Site</a>
                                        <span class="label label-primary label-price"> @reservation.Price</span>
                                    </li>
                                }
                            }
                        </ul>
                    </p>
                    <!--<span class="plus"><a href="#" title="Lorem ipsum"><i class="glyphicon glyphicon-plus"></i></a></span>-->
                </div>
                <span class="clearfix borda"></span>
            </article>
            }
        </section>
    </div>
</body>

</html>